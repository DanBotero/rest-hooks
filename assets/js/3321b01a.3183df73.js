"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[37239],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>m});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),u=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},c=function(e){var n=u(e.components);return t.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return r?t.createElement(f,s(s({ref:n},c),{},{components:r})):t.createElement(f,s({ref:n},c))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=r[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},92026:(e,n,r)=>{r.r(n),r.d(n,{frontMatter:()=>a,contentTitle:()=>s,metadata:()=>i,toc:()=>l,default:()=>c});var t=r(87462),o=(r(67294),r(3905));const a={title:"Usage without Suspense",id:"no-suspense",original_id:"no-suspense"},s=void 0,i={unversionedId:"guides/no-suspense",id:"version-2.2/guides/no-suspense",isDocsHomePage:!1,title:"Usage without Suspense",description:"Some libraries you work with may take a loading or error state.",source:"@site/versioned_docs/version-2.2/guides/no-suspense.md",sourceDirName:"guides",slug:"/guides/no-suspense",permalink:"/docs/2.2/guides/no-suspense",editUrl:"https://github.com/coinbase/rest-hooks/edit/master/docs/guides/no-suspense.md",tags:[],version:"2.2",frontMatter:{title:"Usage without Suspense",id:"no-suspense",original_id:"no-suspense"},sidebar:"version-2.2/docs",previous:{title:"Usage with class components",permalink:"/docs/2.2/guides/class-components"},next:{title:"API Reference",permalink:"/docs/2.2/api/README"}},l=[{value:"Sample Hook",id:"sample-hook",children:[{value:"<code>useStatefulResource.tsx</code>",id:"usestatefulresourcetsx",children:[],level:4}],level:2},{value:"Hook usage",id:"hook-usage",children:[{value:"<code>resources/ProfileResource.ts</code>",id:"resourcesprofileresourcets",children:[],level:4},{value:"<code>ProfileList.tsx</code>",id:"profilelisttsx",children:[],level:4}],level:2}],u={toc:l};function c({components:e,...n}){return(0,o.kt)("wrapper",(0,t.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Some libraries you work with may take a ",(0,o.kt)("a",{parentName:"p",href:"https://ant.design/components/card/#components-card-demo-loading"},"loading")," or error state.\nIn these cases you might want a boolean ",(0,o.kt)("inlineCode",{parentName:"p"},"loading")," instead of yielding to Suspense."),(0,o.kt)("p",null,"In any case, here's a sample hook you can adapt to use that information in any\nway you please."),(0,o.kt)("h2",{id:"sample-hook"},"Sample Hook"),(0,o.kt)("h4",{id:"usestatefulresourcetsx"},(0,o.kt)("inlineCode",{parentName:"h4"},"useStatefulResource.tsx")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useRetrieve, useCache, useError, Schema, ReadShape } from 'rest-hooks';\n\n/** If the invalidIfStale option is set we suspend if resource has expired */\nfunction hasUsableData<\n  S extends Schema,\n  Params extends Readonly<object>,\n  Body extends Readonly<object | string> | void\n>(\n  resource: RequestResource<ReadShape<S, Params, Body>> | null,\n  fetchShape: ReadShape<S, Params, Body>,\n) {\n  return !(\n    (fetchShape.options && fetchShape.options.invalidIfStale) ||\n    !resource\n  );\n}\n\n/** Ensure a resource is available; loading and error returned explicitly. */\nfunction useStatefulResource<\n  Params extends Readonly<object>,\n  Body extends Readonly<object | string> | void,\n  S extends Schema\n>(fetchShape: ReadShape<S, Params, Body>, params: Params | null) {\n  let maybePromise = useRetrieve(fetchShape, params);\n  const resource = useCache(fetchShape, params);\n\n  const loading =\n    !hasUsableData(resource, fetchShape) &&\n    maybePromise &&\n    typeof maybePromise.then === 'function';\n\n  let error = useError(fetchShape, params, resource);\n\n  return {\n    data: resource as NonNullable<typeof resource>,\n    loading,\n    error,\n  };\n}\n")),(0,o.kt)("h2",{id:"hook-usage"},"Hook usage"),(0,o.kt)("h4",{id:"resourcesprofileresourcets"},(0,o.kt)("inlineCode",{parentName:"h4"},"resources/ProfileResource.ts")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export default class ProfileResource extends Resource {\n  readonly id: number | null = null;\n  readonly img: string = '';\n  readonly fullName: string = '';\n  readonly bio: string = '';\n\n  pk() {\n    return this.id;\n  }\n  static urlRoot = '/profiles';\n}\n")),(0,o.kt)("h4",{id:"profilelisttsx"},(0,o.kt)("inlineCode",{parentName:"h4"},"ProfileList.tsx")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Skeleton, Card, Avatar } from 'antd';\nimport ProfileResource from 'resources/ProfileResource';\n\nimport useStatefulResource from './useStatefulResource';\n\nconst { Meta } = Card;\n\nfunction ProfileList() {\n  const { data, loading, error } = useStatefulResource(\n    ProfileResource.detailShape(),\n    {},\n  );\n  if (error) return <div>Error {error.status}</div>\n  return (\n    <Card style={{ width: 300, marginTop: 16 }} loading={loading}>\n      <Meta\n        avatar={\n          <Avatar src={data.img} />\n        }\n        title={data.fullName}\n        description={data.bio}\n      />\n    </Card>\n  );\n}\n")))}c.isMDXComponent=!0}}]);